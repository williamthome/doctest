searchData={"items":[{"type":"module","doc":"Provides `module/1` and `module/2` to test doc attributes.","title":"doctest","ref":"doctest.html"},{"type":"function","doc":"","title":"doctest.module/1","ref":"doctest.html#module/1"},{"type":"function","doc":"","title":"doctest.module/2","ref":"doctest.html#module/2"},{"type":"type","doc":"","title":"doctest.options/0","ref":"doctest.html#t:options/0"},{"type":"type","doc":"","title":"doctest.test_result/0","ref":"doctest.html#t:test_result/0"},{"type":"module","doc":"Generate tests for doc attributes via parse transform.\n\nJust plug the header on your module:\n```\n-ifdef(TEST).\n-include_lib(\"doctest/include/doctest.hrl\").\n-endif.\n```","title":"doctest_parse_transform","ref":"doctest_parse_transform.html"},{"type":"function","doc":"","title":"doctest_parse_transform.parse_transform/2","ref":"doctest_parse_transform.html#parse_transform/2"},{"type":"extras","doc":"# doctest\n\nA library to test Erlang `-moduledoc` and `-doc` attributes.","title":"Overview","ref":"readme.html"},{"type":"extras","doc":"OTP >= 27.","title":"Requirements - Overview","ref":"readme.html#requirements"},{"type":"extras","doc":"```erlang\n% rebar.config\n{profiles, [\n    {test, [\n        {deps, [{doctest, \"0.8.0\"}]}\n    ]}\n]}.\n```","title":"Installation - Overview","ref":"readme.html#installation"},{"type":"extras","doc":"Tests run via the `doctest:module/1,2` function or on modules that include the [doctest header](/include/doctest.hrl), but only exported functions are tested.\n\n#","title":"Usage - Overview","ref":"readme.html#usage"},{"type":"extras","doc":"Take this module:\n````erlang\n-module(foo).\n-moduledoc \"\"\"\nModule doc tags can also be tested.\n\n```erlang\n1> foo:foo() =:= bar.\ntrue\n```\n\"\"\".\n\n-export([foo/0]).\n\n-doc \"\"\"\n```erlang\n1> foo:foo().\nfoo\n```\n\"\"\".\nfoo() ->\n    bar.\n````\n\nRunning it via `rebar3 as test shell`:\n```erlang\n1> doctest:module(foo).\n PASS  ./test/support/foo.erl:6 -moduledoc\n FAIL  ./test/support/foo.erl:15 -doc\n\n    ❌ assertEqual\n\n    Expected: foo\n    Received: bar\n\n    │\n 15 │ 1> foo:foo().\n 16 │ foo\n    │\n    └── at ./test/support/foo.erl:15\n\nTests: 1 failed, 1 passed, 2 total\n Time: 0.007 seconds\n```\n\n##","title":"Testing via doctest:module/1,2 function - Overview","ref":"readme.html#testing-via-doctest-module-1-2-function"},{"type":"extras","doc":"Options can be provided when using the `doctest:module/2` function. The available options are:\n- `moduledoc` :: `boolean()`: enable or disable `-moduledoc` test\n- `funs` :: `boolean()` | `[{atom(), arity()}]`: enable or disable `-doc` tests or define the functions to be tested\n- `eunit` :: `resolve | term()`: set [EUnit options](#eunit-options)\n\n#","title":"Options - Overview","ref":"readme.html#options"},{"type":"extras","doc":"Take this module:\n````erlang\n-module(math).\n\n-export([add/2]).\n\n-ifdef(TEST).\n-include_lib(\"doctest/include/doctest.hrl\").\n% -doctest  .\n-endif.\n\n-doc \"\"\"\nAdds two numbers together.\n\n_Example_:\n```erlang\n1> math:add(0, 1).\n1\n2> math:add(\n.. 1,\n.. 1\n.. ).\n2\n```\n\"\"\".\nadd(A, B) ->\n    A+B.\n````\n\nNote that the code is defined like in the Erlang shell, starting the expression line from `1..N` and the `^([1-9][0-9]*)>\\s` format, and continues in multiple lines with `..` and the format `^(\\s*)\\.\\.\\s`. The expression header and multiple lines must be aligned, for example:\n```erlang\n% Valid\n1> foo.\nfoo\n2> foo\n.. =:=\n.. bar.\nbar\n\n% Invalid\n1> foo.\nfoo\n200> foo % <- Must 2 (previous line + 1)\n .. =:=  % <- Must be aligned\n  .. bar.\nbar\n```\n\nNow, by running `rebar3 eunit`:\n```erlang\n PASS  ./src/math.erl:29 -doc\n PASS  ./src/math.erl:31 -doc\n\n\nTests: 2 passed, 2 total\n Time: 0.008 seconds\n```\n\nBy changing the first test to:\n```erlang\n1> math:add(1, 1).\n1\n```\n\nAnd running `rebar3 eunit` again:\n```erlang\n FAIL  ./src/math.erl:15 -doc\n\n    ❌ assertEqual\n\n    Expected: 1\n    Received: 2\n\n    │\n 15 │ 1> math:add(1, 1).\n 16 │ 1\n    │\n    └── at ./src/math.erl:15\n\n PASS  ./src/math.erl:17 -doc\n\n\nTests: 1 failed, 1 passed, 2 total\n Time: 0.007 seconds\n```\n\n##","title":"Testing via doctest header - Overview","ref":"readme.html#testing-via-doctest-header"},{"type":"extras","doc":"Options are defined via the `-doctest` attribute and can be defined multiple times. The available options are:\n- `boolean()` | `{enabled, boolean()}`: enable or disable the test running, e.g.:\n  ```erlang\n  -doctest true.\n  ```\n- `{moduledoc, boolean()}`: enable or disable `-moduledoc` test, e.g.:\n  ```erlang\n  -doctest {moduledoc, true}.\n  ```\n- `[{atom(), arity()}]` | `{funs, [{atom(), arity()}] | boolean()}`: enable or disable `-doc` tests or define the functions to be tested, e.g.:\n  ```erlang\n  -doctest [add/2].\n  ```\n- `eunit` :: `resolve | term()`: set [EUnit options](#eunit-options), e.g.:\n  ```erlang\n  -doctest {eunit, resolve}.\n  ```\n- `map()`: define all or partial options, e.g.:\n  ```erlang\n  -doctest #{\n      enabled => true,\n      moduledoc => true,\n      funs => [add/2],\n      eunit => resolve\n  }.\n  ```\n\n#","title":"Options - Overview","ref":"readme.html#options"},{"type":"extras","doc":"Options can be globally defined via a [config file](https://www.erlang.org/doc/man/config.html), e.g.:\n```erlang\n% config/sys.config\n[{doctest, [\n    {enabled, true},\n    {moduledoc, false},\n    {funs, true},\n    {eunit, [no_tty, {report, {eunit_progress, [colored, profile]}}]}\n]}].\n```\n\n#","title":"Global options - Overview","ref":"readme.html#global-options"},{"type":"extras","doc":"Valid EUnit options are the `resolve` atom and a proplist.\n\nBy defining `resolve` as the EUnit options, `doctest` will try to resolve the options via `rebar`. Custom options can be defined as documented at [rebar3.org](https://rebar3.org/docs/testing/eunit/#eunit_opts):\n\n> The default EUnit options can be configured, as documented [here](https://www.erlang.org/doc/man/eunit.html#test-2).\n>\n> Interesting undocumented options are:\n>\n> - `no_tty` completely disables the default EUnit reporter output\n> - `{report, {Module, Args}}` runs a custom EUnit reporter (the functionality that prints results to the shell). The reporter module needs the following callbacks implemented:\n>   ```erlang\n>   -export([start/0]).\n>   -export([start/1]).\n>   -export([init/1]).\n>   -export([handle_begin/3]).\n>   -export([handle_end/3]).\n>   -export([handle_cancel/3]).\n>   -export([terminate/2]).\n>   ```\n>\n> `no_tty` and `report` can be combined to replace the EUnit reporter with a custom one:\n> ```erlang\n> {eunit_opts, [no_tty, {report, {my_reporter, Opts}}]}.\n> ```\n\n##","title":"EUnit options - Overview","ref":"readme.html#eunit-options"},{"type":"extras","doc":"`doctest` has a built-in EUnit reporter called `doctest_eunit_report` for better visualization of the tests. It can be used by defining the below option in the `rebar.config` of your project:\n```erlang\n{eunit_opts, [no_tty, {report, {doctest_eunit_report, []}}]}.\n```\n\n> Currently, no options are expected/provided by the reporter.\n\nAn example of the `doctest_eunit_report` output:\n![doctest_eunit_report](/assets/reporter-go-to-definition.gif)","title":"Doctest EUnit Reporter - Overview","ref":"readme.html#doctest-eunit-reporter"},{"type":"extras","doc":"- [ ] More tests\n- [ ] Specs\n- [ ] Improve docs","title":"TODO - Overview","ref":"readme.html#todo"},{"type":"extras","doc":"If you like this tool, please consider [sponsoring me](https://github.com/sponsors/williamthome).\nI'm thankful for your never-ending support :heart:\n\nI also accept coffees :coffee:\n\n[![\"Buy Me A Coffee\"](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/williamthome)","title":"Sponsors - Overview","ref":"readme.html#sponsors"},{"type":"extras","doc":"#","title":"Contributing - Overview","ref":"readme.html#contributing"},{"type":"extras","doc":"Feel free to [submit an issue on Github](https://github.com/williamthome/doctest/issues/new).","title":"Issues - Overview","ref":"readme.html#issues"},{"type":"extras","doc":"Copyright (c) 2024 [William Fank Thomé](https://github.com/williamthome)\n\n`doctest` is 100% open source and community-driven. All components are available under the Apache 2 License on [GitHub](https://github.com/williamthome/doctest).\n\nSee [LICENSE.md](LICENSE.md) for more information.","title":"License - Overview","ref":"readme.html#license"},{"type":"extras","doc":"# Apache License\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION","title":"License","ref":"license.html"},{"type":"extras","doc":"\"License\" shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, \"control\" means (i) the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n\"submitted\" means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.","title":"1. Definitions. - License","ref":"license.html#1-definitions"},{"type":"extras","doc":"Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.","title":"2. Grant of Copyright License. - License","ref":"license.html#2-grant-of-copyright-license"},{"type":"extras","doc":"Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.","title":"3. Grant of Patent License. - License","ref":"license.html#3-grant-of-patent-license"},{"type":"extras","doc":"You may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n1. You must give any other recipients of the Work or Derivative Works a copy of\n   this License; and\n\n2. You must cause any modified files to carry prominent notices stating that\n   You changed the files; and\n\n3. You must retain, in the Source form of any Derivative Works that You\n   distribute, all copyright, patent, trademark, and attribution notices from\n   the Source form of the Work, excluding those notices that do not pertain to\n   any part of the Derivative Works; and\n\n4. If the Work includes a \"NOTICE\" text file as part of its distribution, then\n   any Derivative Works that You distribute must include a readable copy of the\n   attribution notices contained within such NOTICE file, excluding those\n   notices that do not pertain to any part of the Derivative Works, in at least\n   one of the following places: within a NOTICE text file distributed as part\n   of the Derivative Works; within the Source form or documentation, if\n   provided along with the Derivative Works; or, within a display generated by\n   the Derivative Works, if and wherever such third-party notices normally\n   appear. The contents of the NOTICE file are for informational purposes only\n   and do not modify the License. You may add Your own attribution notices\n   within Derivative Works that You distribute, alongside or as an addendum to\n   the NOTICE text from the Work, provided that such additional attribution\n   notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.","title":"4. Redistribution. - License","ref":"license.html#4-redistribution"},{"type":"extras","doc":"Unless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.","title":"5. Submission of Contributions. - License","ref":"license.html#5-submission-of-contributions"},{"type":"extras","doc":"This License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.","title":"6. Trademarks. - License","ref":"license.html#6-trademarks"},{"type":"extras","doc":"Unless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE, NON-\nINFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.","title":"7. Disclaimer of Warranty. - License","ref":"license.html#7-disclaimer-of-warranty"},{"type":"extras","doc":"In no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.","title":"8. Limitation of Liability. - License","ref":"license.html#8-limitation-of-liability"},{"type":"extras","doc":"While redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nCopyright 2024, William Fank Thomé  .\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","title":"9. Accepting Warranty or Additional Liability. - License","ref":"license.html#9-accepting-warranty-or-additional-liability"}],"content_type":"text/plain","producer":{"name":"ex_doc","version":[48,46,51,49,46,50]}}